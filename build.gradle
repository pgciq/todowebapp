plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
}

group = 'io.github.faimoh'
version = '1.0.0'
description = 'Todo Web Application'

// Java version configuration
java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

repositories {
    // Use Aliyun mirrors for faster downloads in China
    maven { url = 'https://maven.aliyun.com/repository/public' }
    maven { url = 'https://maven.aliyun.com/repository/central' }
    maven { url = 'https://maven.aliyun.com/repository/gradle-plugin' }
    // Fallback to Maven Central
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    
    // Database drivers
    implementation 'mysql:mysql-connector-java:8.0.33'
    runtimeOnly 'com.h2database:h2:2.2.224'
    
    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

// Configure test task to use JUnit 5 Platform
test {
    useJUnitPlatform()
}

// Custom task to display project information
task info {
    description = 'Display project information'
    group = 'help'
    doLast {
        println "Project: ${name}"
        println "Version: ${version}"
        println "Java Version: ${java.sourceCompatibility}"
        println "Build Directory: ${buildDir}"
        println "Spring Boot Application (Embedded Tomcat)"
        println "Access URL: http://localhost:8080/todo"
    }
}

// Task to setup development environment (H2)
task setupDev {
    group = 'Environment'
    description = 'Configure application for development environment (H2 database)'
    doLast {
        println "✓ Configured for development environment (H2 database)"
        println "  - H2 in-memory database will be used"
        println "  - Database will auto-initialize with sample data"
        println "  - Profile: dev (default)"
        println "  - Run application with: './gradlew bootRun'"
        println "  - Access at: http://localhost:8080/todo"
    }
}

// Task to setup production environment (MySQL)
task setupProd {
    group = 'Environment'
    description = 'Configure application for production environment (MySQL database)'
    doLast {
        println "✓ Configured for production environment (MySQL database)"
        println "  - MySQL database will be used"
        println "  - Ensure MySQL is running and database 'todo' exists"
        println "  - Run database schema: src/main/resources/database/schema.sql"
        println "  - Profile: prod"
        println "  - Run application with: './gradlew bootRun -Dspring.profiles.active=prod'"
        println "  - Access at: http://localhost:8080/todo"
    }
}

// Display current configuration
task showConfig {
    group = 'Environment'
    description = 'Show current Spring profile configuration'
    doLast {
        def activeProfile = System.getProperty('spring.profiles.active') ?: 
                           System.getenv('SPRING_PROFILES_ACTIVE') ?: 'dev'
        println "Current Spring Profile: ${activeProfile}"
        
        if (activeProfile == 'dev' || activeProfile == 'default') {
            println "Current configuration: DEVELOPMENT (H2 In-Memory Database)"
            println "  - Database: In-memory H2"
            println "  - Auto-initialization: Enabled"
            println "  - Server: Embedded Tomcat"
        } else if (activeProfile == 'prod') {
            println "Current configuration: PRODUCTION (MySQL Database)" 
            println "  - Database: MySQL"
            println "  - Host: localhost:3306"
            println "  - Database: todo"
            println "  - Server: Embedded Tomcat"
        } else {
            println "Current configuration: CUSTOM (${activeProfile})"
        }
        
        println "\nTo change profile:"
        println "  - Run with: './gradlew bootRun -Dspring.profiles.active=<profile>'"
        println "  - Available profiles: dev, prod"
    }
}

// Test H2 database setup
task testH2 (type: JavaExec) {
    group = 'Verification'
    description = 'Test H2 database setup and initialization'
    dependsOn compileTestJava
    
    mainClass = 'io.github.faimoh.todowebapp.H2DatabaseTest'
    classpath = sourceSets.test.runtimeClasspath + sourceSets.main.runtimeClasspath
    
    systemProperty 'user.dir', project.projectDir
}

// Quick development server start
task dev {
    group = 'Development'
    description = 'Start development server with H2 database'
    dependsOn setupDev
    doLast {
        println "Development environment configured!"
        println "Next step: Run './gradlew bootRun' to start the Spring Boot server"
        println "Server will be available at: http://localhost:8080/todo"
        println "Using embedded Tomcat with H2 in-memory database"
    }
}

// Spring Boot development configuration
bootRun {
    args = ['--spring.profiles.active=dev']
    jvmArgs = [
        '-XX:+UseG1GC',
        '-Xmx512m'
    ]
}
